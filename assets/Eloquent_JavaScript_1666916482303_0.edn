{:highlights [{:id #uuid "635b2169-9f4c-407c-b905-832ef995293b", :page 24, :position {:bounding {:x1 0, :y1 317.5, :x2 588.4300537109375, :y2 696.3984375, :width 609.0000000000001, :height 864.1229947798728}, :rects ({:x1 0, :y1 317.5, :x2 0, :y2 338.5, :width 609.0000000000001, :height 864.1229947798728} {:x1 20.5703125, :y1 652.3359375, :x2 588.4300537109375, :y2 673.8359375, :width 609.0000000000001, :height 864.1229947798728} {:x1 20.5703125, :y1 674.8984375, :x2 353.8231201171875, :y2 696.3984375, :width 609.0000000000001, :height 864.1229947798728}), :page 24}, :content {:text "JavaScript was introduced in 1995 as a way to add programs to web pages in the Netscape Navigator browser."}, :properties {:color "yellow"}} {:id #uuid "635b2182-d2e0-442a-aef1-1b917def2086", :page 25, :position {:bounding {:x1 0, :y1 29.5, :x2 588.4229736328125, :y2 218.1171875, :width 609.0000000000001, :height 864.1229947798728}, :rects ({:x1 0, :y1 29.5, :x2 0, :y2 50.5, :width 609.0000000000001, :height 864.1229947798728} {:x1 0, :y1 45.5, :x2 0, :y2 66.5, :width 609.0000000000001, :height 864.1229947798728} {:x1 450.015869140625, :y1 151.5, :x2 588.410400390625, :y2 173, :width 609.0000000000001, :height 864.1229947798728} {:x1 20.5703125, :y1 174.0546875, :x2 588.4229736328125, :y2 195.5546875, :width 609.0000000000001, :height 864.1229947798728} {:x1 20.5703125, :y1 196.6171875, :x2 190.06130981445312, :y2 218.1171875, :width 609.0000000000001, :height 864.1229947798728}), :page 25}, :content {:text "JavaScript is also used in more traditional websites to provide various forms of interactivity and cleverness."}, :properties {:color "yellow"}} {:id #uuid "635b21e1-869a-4229-afe8-26bbdfdb11e8", :page 25, :position {:bounding {:x1 0, :y1 189.5, :x2 588.4347534179688, :y2 511.40625, :width 609.0000000000001, :height 864.1229947798728}, :rects ({:x1 0, :y1 189.5, :x2 0, :y2 210.5, :width 609.0000000000001, :height 864.1229947798728} {:x1 0, :y1 205.5, :x2 0, :y2 226.5, :width 609.0000000000001, :height 864.1229947798728} {:x1 0, :y1 221.5, :x2 0, :y2 242.5, :width 609.0000000000001, :height 864.1229947798728} {:x1 0, :y1 237.5, :x2 0, :y2 258.5, :width 609.0000000000001, :height 864.1229947798728} {:x1 0, :y1 253.5, :x2 0, :y2 274.5, :width 609.0000000000001, :height 864.1229947798728} {:x1 373.66265869140625, :y1 377.1015625, :x2 588.4347534179688, :y2 398.6015625, :width 609.0000000000001, :height 864.1229947798728} {:x1 20.5703125, :y1 399.6640625, :x2 588.4094848632812, :y2 421.1640625, :width 609.0000000000001, :height 864.1229947798728} {:x1 20.5703125, :y1 422.2265625, :x2 588.4232177734375, :y2 443.7265625, :width 609.0000000000001, :height 864.1229947798728} {:x1 20.5703125, :y1 444.78125, :x2 588.0514526367188, :y2 466.28125, :width 609.0000000000001, :height 864.1229947798728} {:x1 20.5703125, :y1 467.34375, :x2 588.4067993164062, :y2 488.84375, :width 609.0000000000001, :height 864.1229947798728} {:x1 20.5703125, :y1 489.90625, :x2 178.48995971679688, :y2 511.40625, :width 609.0000000000001, :height 864.1229947798728}), :page 25}, :content {:text "a standard document was written to describe the way the JavaScript language should work so that the various pieces of software that claimed to support JavaScript were actually talking about the same language. This is called the ECMAScript standard, after the Ecma International organization that did the standardization."}, :properties {:color "yellow"}} {:id #uuid "635b220e-ac98-4c1d-a58f-6411b0e203eb", :page 26, :position {:bounding {:x1 110.92283630371094, :y1 106.375, :x2 508.66587829589844, :y2 127.875, :width 609.0000000000001, :height 864.1229947798728}, :rects ({:x1 110.92283630371094, :y1 106.375, :x2 508.66587829589844, :y2 127.875, :width 609.0000000000001, :height 864.1229947798728}), :page 26}, :content {:text "JavaScript is ridiculously liberal in what it allows"}, :properties {:color "yellow"}} {:id #uuid "635b226f-c62e-4caf-99f6-43440386ab09", :page 27, :position {:bounding {:x1 0, :y1 13.5, :x2 588.412841796875, :y2 195.5546875, :width 609.0000000000001, :height 864.1229947798728}, :rects ({:x1 0, :y1 13.5, :x2 0, :y2 34.5, :width 609.0000000000001, :height 864.1229947798728} {:x1 0, :y1 29.5, :x2 0, :y2 50.5, :width 609.0000000000001, :height 864.1229947798728} {:x1 39.375, :y1 128.9375, :x2 588.412841796875, :y2 150.4375, :width 609.0000000000001, :height 864.1229947798728} {:x1 20.5703125, :y1 151.5, :x2 588.4097900390625, :y2 173, :width 609.0000000000001, :height 864.1229947798728} {:x1 20.5703125, :y1 174.0546875, :x2 305.6253662109375, :y2 195.5546875, :width 609.0000000000001, :height 864.1229947798728}), :page 27}, :content {:text "Web browsers are not the only platforms on which JavaScript is used. Some databases, such as MongoDB and CouchDB, use JavaScript as their scripting and query language."}, :properties {:color "yellow"}} {:id #uuid "635b2353-9f22-4b29-afdc-4cd3888366cc", :page 30, :position {:bounding {:x1 0, :y1 176, :x2 609, :y2 1738, :width 609.0000000000001, :height 864.1229947798728}, :rects ({:x1 0, :y1 176, :x2 609, :y2 176, :width 609.0000000000001, :height 864.1229947798728} {:x1 313.6962585449219, :y1 771.412353515625, :x2 313.70391845703125, :y2 792.912353515625, :width 609.0000000000001, :height 864.1229947798728} {:x1 0, :y1 874, :x2 609, :y2 1738, :width 609.0000000000001, :height 864.1229947798728}), :page 30}, :content {:text "“Below the surface of the machine, the program moves."}, :properties {:color "yellow"}} {:id #uuid "635b3e07-c9df-42b2-b3d5-455b6a89e1da", :page 37, :position {:bounding {:x1 0, :y1 93.5, :x2 588.6039428710938, :y2 344.859375, :width 609.0000000000001, :height 864.1229947798728}, :rects ({:x1 0, :y1 93.5, :x2 0, :y2 114.5, :width 609.0000000000001, :height 864.1229947798728} {:x1 39.375, :y1 300.796875, :x2 588.6039428710938, :y2 322.296875, :width 609.0000000000001, :height 864.1229947798728} {:x1 20.5703125, :y1 323.359375, :x2 555.4685668945312, :y2 344.859375, :width 609.0000000000001, :height 864.1229947798728}), :page 37}, :content {:text "You can use single quotes, double quotes, or backticks to mark strings, as long as the quotes at the start and the end of the string match."}, :properties {:color "yellow"}} {:id #uuid "635b431b-ed6a-45c5-b0a8-63a1bf94d210", :page 39, :position {:bounding {:x1 0, :y1 125.5, :x2 588.0078125, :y2 432.9765625, :width 609.0000000000001, :height 864.1229947798728}, :rects ({:x1 0, :y1 125.5, :x2 0, :y2 146.5, :width 609.0000000000001, :height 864.1229947798728} {:x1 0, :y1 141.5, :x2 0, :y2 162.5, :width 609.0000000000001, :height 864.1229947798728} {:x1 0, :y1 157.5, :x2 0, :y2 178.5, :width 609.0000000000001, :height 864.1229947798728} {:x1 143.82290649414062, :y1 332.921875, :x2 588.0078125, :y2 354.421875, :width 609.0000000000001, :height 864.1229947798728} {:x1 20.5703125, :y1 355.484375, :x2 587.3109741210938, :y2 376.984375, :width 609.0000000000001, :height 864.1229947798728} {:x1 20.5703125, :y1 378.046875, :x2 217.68348693847656, :y2 399.546875, :width 609.0000000000001, :height 864.1229947798728} {:x1 31.734375, :y1 416.9765625, :x2 260.4073181152344, :y2 432.9765625, :width 609.0000000000001, :height 864.1229947798728}), :page 39}, :content {:text "Backtick-quoted strings, usually called template literals, can do a few more tricks. Apart from being able to span lines, they can also embed other values.`half of 100 is ${100 / 2}`"}, :properties {:color "yellow"}} {:id #uuid "635b4334-d869-479d-90c1-45413412e77a", :page 39, :position {:bounding {:x1 0, :y1 189.5, :x2 588.4224243164062, :y2 535.8515625, :width 609.0000000000001, :height 864.1229947798728}, :rects ({:x1 0, :y1 189.5, :x2 0, :y2 210.5, :width 609.0000000000001, :height 864.1229947798728} {:x1 0, :y1 205.5, :x2 0, :y2 226.5, :width 609.0000000000001, :height 864.1229947798728} {:x1 39.375, :y1 469.2265625, :x2 314.8087158203125, :y2 490.7265625, :width 609.0000000000001, :height 864.1229947798728} {:x1 346.1875, :y1 469.2265625, :x2 588.4224243164062, :y2 490.7265625, :width 609.0000000000001, :height 864.1229947798728} {:x1 314.8046875, :y1 473.3828125, :x2 343.6796875, :y2 489.3828125, :width 609.0000000000001, :height 864.1229947798728} {:x1 20.5703125, :y1 491.7890625, :x2 588.4097900390625, :y2 513.2890625, :width 609.0000000000001, :height 864.1229947798728} {:x1 20.5703125, :y1 514.3515625, :x2 359.22467041015625, :y2 535.8515625, :width 609.0000000000001, :height 864.1229947798728}), :page 39}, :content {:text "When you write something inside ${} in a template literal, its result will be computed, converted to a string, and included at that position. The example produces “half of 100 is 50”."}, :properties {:color "yellow"}} {:id #uuid "635b60f7-752d-4e08-8b56-414045439c78", :page 39, :position {:bounding {:x1 0, :y1 269.5, :x2 588.4203491210938, :y2 677.6015625, :width 609.0000000000001, :height 864.1229947798728}, :rects ({:x1 0, :y1 269.5, :x2 0, :y2 290.5, :width 609.0000000000001, :height 864.1229947798728} {:x1 128.609375, :y1 633.5390625, :x2 588.4203491210938, :y2 655.0390625, :width 609.0000000000001, :height 864.1229947798728} {:x1 71.4765625, :y1 637.6953125, :x2 125.6875, :y2 653.6953125, :width 609.0000000000001, :height 864.1229947798728} {:x1 20.5703125, :y1 656.1015625, :x2 210.81402587890625, :y2 677.6015625, :width 609.0000000000001, :height 864.1229947798728}), :page 39}, :content {:text "typeof operator, which produces a string value naming the type of the value you give it."}, :properties {:color "yellow"}} {:id #uuid "635b6171-4652-436a-a9d0-a75beb9450c0", :page 42, :position {:bounding {:x1 0, :y1 141.5, :x2 588.41943359375, :y2 457.7734375, :width 609.0000000000001, :height 864.1229947798728}, :rects ({:x1 0, :y1 141.5, :x2 0, :y2 162.5, :width 609.0000000000001, :height 864.1229947798728} {:x1 122.19402313232422, :y1 413.7109375, :x2 588.41943359375, :y2 435.2109375, :width 609.0000000000001, :height 864.1229947798728} {:x1 20.5703125, :y1 436.2734375, :x2 440.40924072265625, :y2 457.7734375, :width 609.0000000000001, :height 864.1229947798728}), :page 42}, :content {:text "JavaScript supports three logical operators: and, or, and not. These can be used to “reason” about Booleans."}, :properties {:color "yellow"}} {:id #uuid "635b6176-613b-48f2-9452-28c285f44aab", :page 42, :position {:bounding {:x1 0, :y1 173.5, :x2 588.4133911132812, :y2 502.890625, :width 609.0000000000001, :height 864.1229947798728}, :rects ({:x1 0, :y1 173.5, :x2 0, :y2 194.5, :width 609.0000000000001, :height 864.1229947798728} {:x1 39.375, :y1 458.8359375, :x2 77.74633026123047, :y2 480.3359375, :width 609.0000000000001, :height 864.1229947798728} {:x1 101.296875, :y1 458.8359375, :x2 588.4133911132812, :y2 480.3359375, :width 609.0000000000001, :height 864.1229947798728} {:x1 77.7421875, :y1 462.9921875, :x2 98.1640625, :y2 478.9921875, :width 609.0000000000001, :height 864.1229947798728} {:x1 20.5703125, :y1 481.390625, :x2 499.5977783203125, :y2 502.890625, :width 609.0000000000001, :height 864.1229947798728}), :page 42}, :content {:text "The && operator represents logical and. It is a binary operator, and its result is true only if both the values given to it are true."}, :properties {:color "yellow"}} {:id #uuid "635b6180-4180-460e-84e3-f5e54d35b7e3", :page 42, :position {:bounding {:x1 0, :y1 269.5, :x2 588.4169311523438, :y2 675.859375, :width 609.0000000000001, :height 864.1229947798728}, :rects ({:x1 0, :y1 269.5, :x2 0, :y2 290.5, :width 609.0000000000001, :height 864.1229947798728} {:x1 39.375, :y1 631.796875, :x2 77.78119659423828, :y2 653.296875, :width 609.0000000000001, :height 864.1229947798728} {:x1 101.3671875, :y1 631.796875, :x2 588.4169311523438, :y2 653.296875, :width 609.0000000000001, :height 864.1229947798728} {:x1 77.7734375, :y1 635.953125, :x2 98.203125, :y2 651.953125, :width 609.0000000000001, :height 864.1229947798728} {:x1 20.5703125, :y1 654.359375, :x2 220.7244873046875, :y2 675.859375, :width 609.0000000000001, :height 864.1229947798728}), :page 42}, :content {:text "The || operator denotes logical or. It produces true if either of the values given to it is true."}, :properties {:color "yellow"}} {:id #uuid "635b61b0-b5ea-424d-b05b-79cdca261081", :page 43, :position {:bounding {:x1 0, :y1 45.5, :x2 588.4413452148438, :y2 268.8828125, :width 609.0000000000001, :height 864.1229947798728}, :rects ({:x1 0, :y1 45.5, :x2 0, :y2 66.5, :width 609.0000000000001, :height 864.1229947798728} {:x1 0, :y1 61.5, :x2 0, :y2 82.5, :width 609.0000000000001, :height 864.1229947798728} {:x1 39.375, :y1 202.2578125, :x2 588.4197998046875, :y2 223.7578125, :width 609.0000000000001, :height 864.1229947798728} {:x1 374.5625, :y1 206.4140625, :x2 379.265625, :y2 222.4140625, :width 609.0000000000001, :height 864.1229947798728} {:x1 20.5703125, :y1 224.8203125, :x2 278.74713134765625, :y2 246.3203125, :width 609.0000000000001, :height 864.1229947798728} {:x1 326.875, :y1 224.8203125, :x2 403.988525390625, :y2 246.3203125, :width 609.0000000000001, :height 864.1229947798728} {:x1 446.1875, :y1 224.8203125, :x2 491.6328125, :y2 246.3203125, :width 609.0000000000001, :height 864.1229947798728} {:x1 549.4453125, :y1 224.8203125, :x2 588.4413452148438, :y2 246.3203125, :width 609.0000000000001, :height 864.1229947798728} {:x1 278.7421875, :y1 228.9765625, :x2 324.5078125, :y2 244.9765625, :width 609.0000000000001, :height 864.1229947798728} {:x1 403.984375, :y1 228.9765625, :x2 446.2165222167969, :y2 244.9765625, :width 609.0000000000001, :height 864.1229947798728} {:x1 492.8671875, :y1 228.9765625, :x2 549.4557495117188, :y2 244.9765625, :width 609.0000000000001, :height 864.1229947798728} {:x1 54.3359375, :y1 247.3828125, :x2 59.0390625, :y2 268.8828125, :width 609.0000000000001, :height 864.1229947798728} {:x1 20.5703125, :y1 251.5390625, :x2 54.35637664794922, :y2 267.5390625, :width 609.0000000000001, :height 864.1229947798728}), :page 43}, :content {:text "Not is written as an exclamation mark (!). It is a unary operator that flips the value given to it—!true produces false, and !false gives true."}, :properties {:color "yellow"}} {:id #uuid "635b61e7-ab11-431b-aafe-c43a6c9b7217", :page 43, :position {:bounding {:x1 0, :y1 221.5, :x2 588.408203125, :y2 540.546875, :width 609.0000000000001, :height 864.1229947798728}, :rects ({:x1 0, :y1 221.5, :x2 0, :y2 242.5, :width 609.0000000000001, :height 864.1229947798728} {:x1 39.375, :y1 496.484375, :x2 588.408203125, :y2 517.984375, :width 609.0000000000001, :height 864.1229947798728} {:x1 20.5703125, :y1 519.046875, :x2 300.4787902832031, :y2 540.546875, :width 609.0000000000001, :height 864.1229947798728}), :page 43}, :content {:text "The last logical operator I will discuss is not unary, not binary, but ternary, operating on three values"}, :properties {:color "yellow"}} {:id #uuid "635b61f1-e157-4220-a09a-001a47b9a6af", :page 43, :position {:bounding {:x1 0, :y1 269.5, :x2 260.38446044921875, :y2 655.765625, :width 609.0000000000001, :height 864.1229947798728}, :rects ({:x1 0, :y1 269.5, :x2 0, :y2 290.5, :width 609.0000000000001, :height 864.1229947798728} {:x1 0, :y1 285.5, :x2 0, :y2 306.5, :width 609.0000000000001, :height 864.1229947798728} {:x1 0, :y1 301.5, :x2 0, :y2 322.5, :width 609.0000000000001, :height 864.1229947798728} {:x1 31.8671875, :y1 580.546875, :x2 251.92198181152344, :y2 596.546875, :width 609.0000000000001, :height 864.1229947798728} {:x1 31.8671875, :y1 600.28125, :x2 81.0234375, :y2 616.28125, :width 609.0000000000001, :height 864.1229947798728} {:x1 31.8671875, :y1 620.0234375, :x2 260.38446044921875, :y2 636.0234375, :width 609.0000000000001, :height 864.1229947798728} {:x1 31.8671875, :y1 639.765625, :x2 73.98162841796875, :y2 655.765625, :width 609.0000000000001, :height 864.1229947798728}), :page 43}, :content {:text "console.log(true ? 1 : 2);// → 1 console.log(false ? 1 : 2);// → "}, :properties {:color "blue"}} {:id #uuid "635b6289-eb42-4927-b583-54967e7d86af", :page 44, :position {:bounding {:x1 0, :y1 13.5, :x2 588.4076538085938, :y2 195.5546875, :width 609.0000000000001, :height 864.1229947798728}, :rects ({:x1 0, :y1 13.5, :x2 0, :y2 34.5, :width 609.0000000000001, :height 864.1229947798728} {:x1 0, :y1 29.5, :x2 0, :y2 50.5, :width 609.0000000000001, :height 864.1229947798728} {:x1 20.5703125, :y1 128.9375, :x2 588.4076538085938, :y2 150.4375, :width 609.0000000000001, :height 864.1229947798728} {:x1 20.5703125, :y1 151.5, :x2 588.0719604492188, :y2 173, :width 609.0000000000001, :height 864.1229947798728} {:x1 20.5703125, :y1 174.0546875, :x2 452.04962158203125, :y2 195.5546875, :width 609.0000000000001, :height 864.1229947798728}), :page 44}, :content {:text "The value on the left of the question mark “picks” which of the other two values will come out. When it is true, it chooses the middle value, and when it is false, it chooses the value on the right."}, :properties {:color "yellow"}} {:id #uuid "635b6644-3298-41aa-acf5-2684014849e3", :page 44, :position {:bounding {:x1 0, :y1 77.5, :x2 588.4151611328125, :y2 314.75, :width 609.0000000000001, :height 864.1229947798728}, :rects ({:x1 0, :y1 77.5, :x2 0, :y2 98.5, :width 609.0000000000001, :height 864.1229947798728} {:x1 20.5703125, :y1 270.6875, :x2 321.0611572265625, :y2 292.1875, :width 609.0000000000001, :height 864.1229947798728} {:x1 360.53125, :y1 270.6875, :x2 395.91717529296875, :y2 292.1875, :width 609.0000000000001, :height 864.1229947798728} {:x1 471.8828125, :y1 270.6875, :x2 588.4151611328125, :y2 292.1875, :width 609.0000000000001, :height 864.1229947798728} {:x1 321.0546875, :y1 274.84375, :x2 358.375, :y2 290.84375, :width 609.0000000000001, :height 864.1229947798728} {:x1 395.9140625, :y1 274.84375, :x2 471.9315185546875, :y2 290.84375, :width 609.0000000000001, :height 864.1229947798728} {:x1 20.5703125, :y1 293.25, :x2 381.7296142578125, :y2 314.75, :width 609.0000000000001, :height 864.1229947798728}), :page 44}, :content {:text "There are two special values, written null and undefined, that are used to denote the absence of a meaningful value."}, :properties {:color "yellow"}} {:id #uuid "635b66c7-349a-4364-b77d-5ae60f38ca83", :page 44, :position {:bounding {:x1 0, :y1 125.5, :x2 588.4231567382812, :y2 404.9921875, :width 609.0000000000001, :height 864.1229947798728}, :rects ({:x1 0, :y1 125.5, :x2 0, :y2 146.5, :width 609.0000000000001, :height 864.1229947798728} {:x1 0, :y1 141.5, :x2 0, :y2 162.5, :width 609.0000000000001, :height 864.1229947798728} {:x1 39.375, :y1 338.3671875, :x2 588.4088134765625, :y2 359.8671875, :width 609.0000000000001, :height 864.1229947798728} {:x1 20.5703125, :y1 360.9296875, :x2 297.296875, :y2 382.4296875, :width 609.0000000000001, :height 864.1229947798728} {:x1 381.96875, :y1 360.9296875, :x2 588.4231567382812, :y2 382.4296875, :width 609.0000000000001, :height 864.1229947798728} {:x1 299.3046875, :y1 365.0859375, :x2 381.9834289550781, :y2 381.0859375, :width 609.0000000000001, :height 864.1229947798728} {:x1 20.5703125, :y1 383.4921875, :x2 180.7946319580078, :y2 404.9921875, :width 609.0000000000001, :height 864.1229947798728}), :page 44}, :content {:text "Many operations in the language that don’t produce a meaningful value (you’ll see some later) yield undefined simply because they have to yield some value."}, :properties {:color "yellow"}} {:id #uuid "635b66ee-005b-4dde-81fe-ffa7957b9a22", :page 44, :position {:bounding {:x1 0, :y1 173.5, :x2 588.42822265625, :y2 450.1171875, :width 609.0000000000001, :height 864.1229947798728}, :rects ({:x1 0, :y1 173.5, :x2 0, :y2 194.5, :width 609.0000000000001, :height 864.1229947798728} {:x1 39.375, :y1 406.0546875, :x2 322.2265625, :y2 427.5546875, :width 609.0000000000001, :height 864.1229947798728} {:x1 404.7265625, :y1 406.0546875, :x2 439.09375, :y2 427.5546875, :width 609.0000000000001, :height 864.1229947798728} {:x1 479.3984375, :y1 406.0546875, :x2 588.42822265625, :y2 427.5546875, :width 609.0000000000001, :height 864.1229947798728} {:x1 323.140625, :y1 410.2109375, :x2 404.7388916015625, :y2 426.2109375, :width 609.0000000000001, :height 864.1229947798728} {:x1 440.015625, :y1 410.2109375, :x2 479.4060363769531, :y2 426.2109375, :width 609.0000000000001, :height 864.1229947798728} {:x1 20.5703125, :y1 428.6171875, :x2 554.2071533203125, :y2 450.1171875, :width 609.0000000000001, :height 864.1229947798728}), :page 44}, :content {:text "The difference in meaning between undefined and null is an accident of JavaScript’s design, and it doesn’t matter most of the time."}, :properties {:color "yellow"}} {:id #uuid "635c0f67-3221-4947-875e-971743111f47", :page 45, :position {:bounding {:x1 0, :y1 109.5, :x2 588.43212890625, :y2 347.84375, :width 609.0000000000001, :height 864.122994779873}, :rects ({:x1 0, :y1 109.5, :x2 0, :y2 130.5, :width 609.0000000000001, :height 864.122994779873} {:x1 0, :y1 125.5, :x2 0, :y2 146.5, :width 609.0000000000001, :height 864.122994779873} {:x1 39.375, :y1 281.21875, :x2 588.43212890625, :y2 302.71875, :width 609.0000000000001, :height 864.122994779873} {:x1 20.5703125, :y1 303.78125, :x2 588.411865234375, :y2 325.28125, :width 609.0000000000001, :height 864.122994779873} {:x1 20.5703125, :y1 326.34375, :x2 588.0078125, :y2 347.84375, :width 609.0000000000001, :height 864.122994779873}), :page 45}, :content {:text "When an operator is applied to the “wrong” type of value, JavaScript will quietly convert that value to the type it needs, using a set of rules that often aren’t what you want or expect. This is called type coercion."}, :properties {:color "yellow"}} {:id #uuid "635c0f8c-85d3-4adb-8691-8e698d0866d7", :page 45, :position {:bounding {:x1 0, :y1 157.5, :x2 588.4249877929688, :y2 438.0859375, :width 609.0000000000001, :height 864.122994779873}, :rects ({:x1 0, :y1 157.5, :x2 0, :y2 178.5, :width 609.0000000000001, :height 864.122994779873} {:x1 0, :y1 173.5, :x2 0, :y2 194.5, :width 609.0000000000001, :height 864.122994779873} {:x1 0, :y1 189.5, :x2 0, :y2 210.5, :width 609.0000000000001, :height 864.122994779873} {:x1 20.5703125, :y1 348.8984375, :x2 59.281551361083984, :y2 370.3984375, :width 609.0000000000001, :height 864.122994779873} {:x1 100.0546875, :y1 348.8984375, :x2 447.49462890625, :y2 370.3984375, :width 609.0000000000001, :height 864.122994779873} {:x1 480.203125, :y1 348.8984375, :x2 588.4085693359375, :y2 370.3984375, :width 609.0000000000001, :height 864.122994779873} {:x1 59.28125, :y1 353.0546875, :x2 96.59375, :y2 369.0546875, :width 609.0000000000001, :height 864.122994779873} {:x1 357.4453125, :y1 353.0546875, :x2 364.5, :y2 369.0546875, :width 609.0000000000001, :height 864.122994779873} {:x1 447.484375, :y1 353.0546875, :x2 476.7265625, :y2 369.0546875, :width 609.0000000000001, :height 864.122994779873} {:x1 20.5703125, :y1 371.4609375, :x2 181.46295166015625, :y2 392.9609375, :width 609.0000000000001, :height 864.122994779873} {:x1 195.5390625, :y1 371.4609375, :x2 587.66650390625, :y2 392.9609375, :width 609.0000000000001, :height 864.122994779873} {:x1 181.4609375, :y1 375.6171875, :x2 195.54934692382812, :y2 391.6171875, :width 609.0000000000001, :height 864.122994779873} {:x1 20.5703125, :y1 394.0234375, :x2 62.1953125, :y2 415.5234375, :width 609.0000000000001, :height 864.122994779873} {:x1 81.140625, :y1 394.0234375, :x2 557.421875, :y2 415.5234375, :width 609.0000000000001, :height 864.122994779873} {:x1 576.046875, :y1 394.0234375, :x2 588.4249877929688, :y2 415.5234375, :width 609.0000000000001, :height 864.122994779873} {:x1 65.265625, :y1 398.1796875, :x2 81.15870666503906, :y2 414.1796875, :width 609.0000000000001, :height 864.122994779873} {:x1 560.1640625, :y1 398.1796875, :x2 576.05712890625, :y2 414.1796875, :width 609.0000000000001, :height 864.122994779873} {:x1 20.5703125, :y1 416.5859375, :x2 125.0078125, :y2 438.0859375, :width 609.0000000000001, :height 864.122994779873} {:x1 158.2734375, :y1 416.5859375, :x2 356.8099060058594, :y2 438.0859375, :width 609.0000000000001, :height 864.122994779873} {:x1 126.4375, :y1 420.7421875, :x2 158.2833251953125, :y2 436.7421875, :width 609.0000000000001, :height 864.122994779873}), :page 45}, :content {:text "The null in the first expression becomes 0, and the \"5\" in the second expression becomes 5 (from string to number). Yet in the third expression, + tries string concatenation before numeric addition, so the 1 is converted to \"1\" (from number to string)."}, :properties {:color "yellow"}} {:id #uuid "635c1044-2637-40f0-acbc-f03bb6ac040c", :page 45, :position {:bounding {:x1 0, :y1 221.5, :x2 588.4295043945312, :y2 505.765625, :width 609.0000000000001, :height 864.122994779873}, :rects ({:x1 0, :y1 221.5, :x2 0, :y2 242.5, :width 609.0000000000001, :height 864.122994779873} {:x1 0, :y1 237.5, :x2 0, :y2 258.5, :width 609.0000000000001, :height 864.122994779873} {:x1 39.375, :y1 439.1484375, :x2 588.4295043945312, :y2 460.6484375, :width 609.0000000000001, :height 864.122994779873} {:x1 20.5703125, :y1 461.703125, :x2 92.4296875, :y2 483.203125, :width 609.0000000000001, :height 864.122994779873} {:x1 155.078125, :y1 461.703125, :x2 176.15625, :y2 483.203125, :width 609.0000000000001, :height 864.122994779873} {:x1 255.578125, :y1 461.703125, :x2 588.4091186523438, :y2 483.203125, :width 609.0000000000001, :height 864.122994779873} {:x1 95.890625, :y1 465.859375, :x2 155.09378051757812, :y2 481.859375, :width 609.0000000000001, :height 864.122994779873} {:x1 179.609375, :y1 465.859375, :x2 255.6268310546875, :y2 481.859375, :width 609.0000000000001, :height 864.122994779873} {:x1 20.5703125, :y1 484.265625, :x2 67.91392517089844, :y2 505.765625, :width 609.0000000000001, :height 864.122994779873} {:x1 93.234375, :y1 484.265625, :x2 98.40573120117188, :y2 505.765625, :width 609.0000000000001, :height 864.122994779873} {:x1 67.9140625, :y1 488.421875, :x2 93.25422668457031, :y2 504.421875, :width 609.0000000000001, :height 864.122994779873}), :page 45}, :content {:text "When something that doesn’t map to a number in an obvious way(such as \"five\" or undefined) is converted to a number, you get the value NaN."}, :properties {:color "yellow"}} {:id #uuid "635c104f-c612-42fe-ba75-f2282bf2ac87", :page 45, :position {:bounding {:x1 0, :y1 253.5, :x2 588.4083251953125, :y2 550.890625, :width 609.0000000000001, :height 864.122994779873}, :rects ({:x1 0, :y1 253.5, :x2 0, :y2 274.5, :width 609.0000000000001, :height 864.122994779873} {:x1 0, :y1 269.5, :x2 0, :y2 290.5, :width 609.0000000000001, :height 864.122994779873} {:x1 103.56849670410156, :y1 484.265625, :x2 375.2109375, :y2 505.765625, :width 609.0000000000001, :height 864.122994779873} {:x1 407.65625, :y1 484.265625, :x2 534.359375, :y2 505.765625, :width 609.0000000000001, :height 864.122994779873} {:x1 560.8828125, :y1 484.265625, :x2 588.4078979492188, :y2 505.765625, :width 609.0000000000001, :height 864.122994779873} {:x1 376.4296875, :y1 488.421875, :x2 407.6662902832031, :y2 504.421875, :width 609.0000000000001, :height 864.122994779873} {:x1 535.5625, :y1 488.421875, :x2 560.9026489257812, :y2 504.421875, :width 609.0000000000001, :height 864.122994779873} {:x1 20.5703125, :y1 506.828125, :x2 588.4083251953125, :y2 528.328125, :width 609.0000000000001, :height 864.122994779873} {:x1 20.5703125, :y1 529.390625, :x2 272.4051208496094, :y2 550.890625, :width 609.0000000000001, :height 864.122994779873}), :page 45}, :content {:text "Further arithmetic operations on NaN keep producing NaN, so if you find yourself getting one of those in an unexpected place, look for accidental type conversions."}, :properties {:color "yellow"}} {:id #uuid "635c116c-d6ae-4c0f-ac67-c6c79b02d847", :page 45, :position {:bounding {:x1 0, :y1 301.5, :x2 588.4193115234375, :y2 641.1328125, :width 609.0000000000001, :height 864.122994779873}, :rects ({:x1 0, :y1 301.5, :x2 0, :y2 322.5, :width 609.0000000000001, :height 864.122994779873} {:x1 0, :y1 317.5, :x2 0, :y2 338.5, :width 609.0000000000001, :height 864.122994779873} {:x1 0, :y1 333.5, :x2 0, :y2 354.5, :width 609.0000000000001, :height 864.122994779873} {:x1 39.375, :y1 551.9453125, :x2 437.8697509765625, :y2 573.4453125, :width 609.0000000000001, :height 864.122994779873} {:x1 454.75, :y1 551.9453125, :x2 588.4086303710938, :y2 573.4453125, :width 609.0000000000001, :height 864.122994779873} {:x1 437.8671875, :y1 556.1015625, :x2 454.7621765136719, :y2 572.1015625, :width 609.0000000000001, :height 864.122994779873} {:x1 20.5703125, :y1 574.5078125, :x2 588.4099731445312, :y2 596.0078125, :width 609.0000000000001, :height 864.122994779873} {:x1 20.5703125, :y1 597.0703125, :x2 190.5703125, :y2 618.5703125, :width 609.0000000000001, :height 864.122994779873} {:x1 217.4765625, :y1 597.0703125, :x2 588.4193115234375, :y2 618.5703125, :width 609.0000000000001, :height 864.122994779873} {:x1 192.1484375, :y1 601.2265625, :x2 217.4886016845703, :y2 617.2265625, :width 609.0000000000001, :height 864.122994779873} {:x1 20.5703125, :y1 619.6328125, :x2 523.5249633789062, :y2 641.1328125, :width 609.0000000000001, :height 864.122994779873}), :page 45}, :content {:text "When comparing values of the same type using ==, the outcome is easy to predict: you should get true when both values are the same, except in the case of NaN. But when the types differ, JavaScript uses a complicated and confusing set of rules to determine what to do."}, :properties {:color "yellow"}} {:id #uuid "635c381b-2b6d-4e52-9759-35c586639eec", :page 45, :position {:bounding {:x1 0, :y1 349.5, :x2 588.4113159179688, :y2 708.8125, :width 608.9999999999999, :height 864.1229947798726}, :rects ({:x1 0, :y1 349.5, :x2 0, :y2 370.5, :width 608.9999999999999, :height 864.1229947798726} {:x1 0, :y1 365.5, :x2 0, :y2 386.5, :width 608.9999999999999, :height 864.1229947798726} {:x1 0, :y1 381.5, :x2 0, :y2 402.5, :width 608.9999999999999, :height 864.1229947798726} {:x1 528.468505859375, :y1 619.6328125, :x2 588.407470703125, :y2 641.1328125, :width 608.9999999999999, :height 864.1229947798726} {:x1 20.5703125, :y1 642.1875, :x2 588.4113159179688, :y2 663.6875, :width 608.9999999999999, :height 864.1229947798726} {:x1 20.5703125, :y1 664.75, :x2 147.68218994140625, :y2 686.25, :width 608.9999999999999, :height 864.1229947798726} {:x1 187.453125, :y1 664.75, :x2 209.84523010253906, :y2 686.25, :width 608.9999999999999, :height 864.1229947798726} {:x1 291.8203125, :y1 664.75, :x2 588.404541015625, :y2 686.25, :width 608.9999999999999, :height 864.1229947798726} {:x1 147.6796875, :y1 668.90625, :x2 184.9921875, :y2 684.90625, :width 608.9999999999999, :height 864.1229947798726} {:x1 209.84375, :y1 668.90625, :x2 289.390625, :y2 684.90625, :width 608.9999999999999, :height 864.1229947798726} {:x1 20.5703125, :y1 687.3125, :x2 385.439453125, :y2 708.8125, :width 608.9999999999999, :height 864.1229947798726} {:x1 425.328125, :y1 687.3125, :x2 447.8364562988281, :y2 708.8125, :width 608.9999999999999, :height 864.1229947798726} {:x1 523.796875, :y1 687.3125, :x2 528.5, :y2 708.8125, :width 608.9999999999999, :height 864.1229947798726} {:x1 385.4375, :y1 691.46875, :x2 422.75, :y2 707.46875, :width 608.9999999999999, :height 864.1229947798726} {:x1 447.828125, :y1 691.46875, :x2 523.8455810546875, :y2 707.46875, :width 608.9999999999999, :height 864.1229947798726}), :page 45}, :content {:text "In most cases, it just tries to convert one of the values to the other value’s type. However, when null or undefined occurs on either side of the operator, it produces true only if both sides are one of null or undefined."}, :properties {:color "yellow"}} {:id #uuid "635c38db-b146-4515-8be4-80a5c5944bff", :page 46, :position {:bounding {:x1 0, :y1 141.5, :x2 588.4117431640625, :y2 446.546875, :width 608.9999999999999, :height 864.1229947798726}, :rects ({:x1 0, :y1 141.5, :x2 0, :y2 162.5, :width 608.9999999999999, :height 864.1229947798726} {:x1 0, :y1 157.5, :x2 0, :y2 178.5, :width 608.9999999999999, :height 864.1229947798726} {:x1 0, :y1 173.5, :x2 0, :y2 194.5, :width 608.9999999999999, :height 864.1229947798726} {:x1 0, :y1 189.5, :x2 0, :y2 210.5, :width 608.9999999999999, :height 864.1229947798726} {:x1 330.1238098144531, :y1 334.8046875, :x2 588.4072265625, :y2 356.3046875, :width 608.9999999999999, :height 864.1229947798726} {:x1 20.5703125, :y1 357.359375, :x2 492.3028564453125, :y2 378.859375, :width 608.9999999999999, :height 864.1229947798726} {:x1 522.96875, :y1 357.359375, :x2 557.9885864257812, :y2 378.859375, :width 608.9999999999999, :height 864.1229947798726} {:x1 583.3046875, :y1 357.359375, :x2 588.0078125, :y2 378.859375, :width 608.9999999999999, :height 864.1229947798726} {:x1 492.3046875, :y1 361.515625, :x2 521.171875, :y2 377.515625, :width 608.9999999999999, :height 864.1229947798726} {:x1 557.984375, :y1 361.515625, :x2 583.3258666992188, :y2 377.515625, :width 608.9999999999999, :height 864.1229947798726} {:x1 20.5703125, :y1 379.921875, :x2 588.4117431640625, :y2 401.421875, :width 608.9999999999999, :height 864.1229947798726} {:x1 20.5703125, :y1 402.484375, :x2 425.6780700683594, :y2 423.984375, :width 608.9999999999999, :height 864.1229947798726} {:x1 534.0078125, :y1 402.484375, :x2 588.4043579101562, :y2 423.984375, :width 608.9999999999999, :height 864.1229947798726} {:x1 425.6796875, :y1 406.640625, :x2 530.9140625, :y2 422.640625, :width 608.9999999999999, :height 864.1229947798726} {:x1 20.5703125, :y1 425.046875, :x2 118.84742736816406, :y2 446.546875, :width 608.9999999999999, :height 864.1229947798726}), :page 46}, :content {:text "When you do not want any type conversions to happen, there are two additional operators: === and !==. The first tests whether a value is precisely equal to the other, and the second tests whether it is not precisely equal. So \"\" === false is false as expected."}, :properties {:color "blue"}} {:id #uuid "635c3977-6903-4e99-b0a4-9d9325509a3b", :page 46, :position {:bounding {:x1 0, :y1 301.5, :x2 588.4186401367188, :y2 710.640625, :width 608.9999999999999, :height 864.1229947798726}, :rects ({:x1 0, :y1 301.5, :x2 0, :y2 322.5, :width 608.9999999999999, :height 864.1229947798726} {:x1 0, :y1 317.5, :x2 0, :y2 338.5, :width 608.9999999999999, :height 864.1229947798726} {:x1 0, :y1 333.5, :x2 0, :y2 354.5, :width 608.9999999999999, :height 864.1229947798726} {:x1 0, :y1 349.5, :x2 0, :y2 370.5, :width 608.9999999999999, :height 864.1229947798726} {:x1 20.5703125, :y1 598.8984375, :x2 202.72161865234375, :y2 620.3984375, :width 608.9999999999999, :height 864.1229947798726} {:x1 227.59375, :y1 598.8984375, :x2 265.2674865722656, :y2 620.3984375, :width 608.9999999999999, :height 864.1229947798726} {:x1 290.140625, :y1 598.8984375, :x2 588.4127197265625, :y2 620.3984375, :width 608.9999999999999, :height 864.1229947798726} {:x1 202.7109375, :y1 603.0546875, :x2 223.140625, :y2 619.0546875, :width 608.9999999999999, :height 864.1229947798726} {:x1 265.2578125, :y1 603.0546875, :x2 285.6796875, :y2 619.0546875, :width 608.9999999999999, :height 864.1229947798726} {:x1 20.5703125, :y1 621.4609375, :x2 588.0532836914062, :y2 642.9609375, :width 608.9999999999999, :height 864.1229947798726} {:x1 20.5703125, :y1 644.0234375, :x2 588.4061279296875, :y2 665.5234375, :width 608.9999999999999, :height 864.1229947798726} {:x1 20.5703125, :y1 666.578125, :x2 588.4186401367188, :y2 688.078125, :width 608.9999999999999, :height 864.1229947798726} {:x1 20.5703125, :y1 689.140625, :x2 337.6628112792969, :y2 710.640625, :width 608.9999999999999, :height 864.1229947798726}), :page 46}, :content {:text "The logical operators && and || handle values of different types in a peculiar way. They will convert the value on their left side to Boolean type in order to decide what to do, but depending on the operator and the result of that conversion, they will return either the original left-hand value or the right-hand value."}, :properties {:color "yellow"}} {:id #uuid "635c3a14-ac1b-414b-a9df-90c949548190", :page 47, :position {:bounding {:x1 0, :y1 -2.5, :x2 588.4281005859375, :y2 173, :width 608.9999999999999, :height 864.1229947798726}, :rects ({:x1 0, :y1 -2.5, :x2 0, :y2 18.5, :width 608.9999999999999, :height 864.1229947798726} {:x1 0, :y1 13.5, :x2 0, :y2 34.5, :width 608.9999999999999, :height 864.1229947798726} {:x1 39.375, :y1 106.375, :x2 78.08478546142578, :y2 127.875, :width 608.9999999999999, :height 864.1229947798726} {:x1 101.96875, :y1 106.375, :x2 588.4195556640625, :y2 127.875, :width 608.9999999999999, :height 864.1229947798726} {:x1 78.078125, :y1 110.53125, :x2 98.5, :y2 126.53125, :width 608.9999999999999, :height 864.1229947798726} {:x1 20.5703125, :y1 128.9375, :x2 588.4281005859375, :y2 150.4375, :width 608.9999999999999, :height 864.1229947798726} {:x1 20.5703125, :y1 151.5, :x2 101.46961975097656, :y2 173, :width 608.9999999999999, :height 864.1229947798726}), :page 47}, :content {:text "The || operator, for example, will return the value to its left when that can be converted to true and will return the value on its right otherwise."}, :properties {:color "yellow"}} {:id #uuid "635c3a5b-b5e3-4fa0-9824-ad7b6cdca21a", :page 47, :position {:bounding {:x1 0, :y1 29.5, :x2 588.4108276367188, :y2 195.5546875, :width 608.9999999999999, :height 864.1229947798726}, :rects ({:x1 0, :y1 29.5, :x2 0, :y2 50.5, :width 608.9999999999999, :height 864.1229947798726} {:x1 113.8984375, :y1 151.5, :x2 588.4108276367188, :y2 173, :width 608.9999999999999, :height 864.1229947798726} {:x1 20.5703125, :y1 174.0546875, :x2 470.6058044433594, :y2 195.5546875, :width 608.9999999999999, :height 864.1229947798726}), :page 47}, :content {:text "This has the expected effect when the values are Boolean and does something analogous for values of other types."}, :properties {:color "yellow"}} {:id #uuid "635c3c9a-de34-49ff-a1ca-1d10b9805d17", :page 47, :position {:bounding {:x1 0, :y1 125.5, :x2 588.4398803710938, :y2 481.328125, :width 608.9999999999999, :height 864.1229947798726}, :rects ({:x1 0, :y1 125.5, :x2 0, :y2 146.5, :width 608.9999999999999, :height 864.1229947798726} {:x1 0, :y1 141.5, :x2 0, :y2 162.5, :width 608.9999999999999, :height 864.1229947798726} {:x1 0, :y1 157.5, :x2 0, :y2 178.5, :width 608.9999999999999, :height 864.1229947798726} {:x1 0, :y1 173.5, :x2 0, :y2 194.5, :width 608.9999999999999, :height 864.1229947798726} {:x1 0, :y1 189.5, :x2 0, :y2 210.5, :width 608.9999999999999, :height 864.1229947798726} {:x1 0, :y1 205.5, :x2 0, :y2 226.5, :width 608.9999999999999, :height 864.1229947798726} {:x1 39.375, :y1 324.4609375, :x2 588.4320678710938, :y2 345.9609375, :width 608.9999999999999, :height 864.1229947798726} {:x1 20.5703125, :y1 347.0234375, :x2 465.9897155761719, :y2 368.5234375, :width 608.9999999999999, :height 864.1229947798726} {:x1 489.578125, :y1 347.0234375, :x2 588.4132080078125, :y2 368.5234375, :width 608.9999999999999, :height 864.1229947798726} {:x1 465.984375, :y1 351.1796875, :x2 486.40625, :y2 367.1796875, :width 608.9999999999999, :height 864.1229947798726} {:x1 20.5703125, :y1 369.5859375, :x2 588.4114379882812, :y2 391.0859375, :width 608.9999999999999, :height 864.1229947798726} {:x1 20.5703125, :y1 392.140625, :x2 588.0599365234375, :y2 413.640625, :width 608.9999999999999, :height 864.1229947798726} {:x1 20.5703125, :y1 414.703125, :x2 345.6556396484375, :y2 436.203125, :width 608.9999999999999, :height 864.1229947798726} {:x1 370.9765625, :y1 414.703125, :x2 563.9878540039062, :y2 436.203125, :width 608.9999999999999, :height 864.1229947798726} {:x1 581.2578125, :y1 414.703125, :x2 587.5234375, :y2 436.203125, :width 608.9999999999999, :height 864.1229947798726} {:x1 326.203125, :y1 418.859375, :x2 333.2578125, :y2 434.859375, :width 608.9999999999999, :height 864.1229947798726} {:x1 345.65625, :y1 418.859375, :x2 370.9964294433594, :y2 434.859375, :width 608.9999999999999, :height 864.1229947798726} {:x1 563.9921875, :y1 418.859375, :x2 581.2576293945312, :y2 434.859375, :width 608.9999999999999, :height 864.1229947798726} {:x1 20.5703125, :y1 437.265625, :x2 97.73699951171875, :y2 458.765625, :width 608.9999999999999, :height 864.1229947798726} {:x1 139.9375, :y1 437.265625, :x2 445.453125, :y2 458.765625, :width 608.9999999999999, :height 864.1229947798726} {:x1 482.609375, :y1 437.265625, :x2 525.9296875, :y2 458.765625, :width 608.9999999999999, :height 864.1229947798726} {:x1 97.734375, :y1 441.421875, :x2 139.96653747558594, :y2 457.421875, :width 608.9999999999999, :height 864.1229947798726} {:x1 448.84375, :y1 441.421875, :x2 482.62982177734375, :y2 457.421875, :width 608.9999999999999, :height 864.1229947798726} {:x1 529.328125, :y1 441.421875, :x2 588.4398803710938, :y2 457.421875, :width 608.9999999999999, :height 864.1229947798726} {:x1 20.5703125, :y1 459.828125, :x2 97.88429260253906, :y2 481.328125, :width 608.9999999999999, :height 864.1229947798726} {:x1 114.7578125, :y1 459.828125, :x2 160.375, :y2 481.328125, :width 608.9999999999999, :height 864.1229947798726} {:x1 253.109375, :y1 459.828125, :x2 303.421875, :y2 481.328125, :width 608.9999999999999, :height 864.1229947798726} {:x1 339, :y1 459.828125, :x2 343.703125, :y2 481.328125, :width 608.9999999999999, :height 864.1229947798726} {:x1 97.8828125, :y1 463.984375, :x2 114.7818374633789, :y2 479.984375, :width 608.9999999999999, :height 864.1229947798726} {:x1 161.796875, :y1 463.984375, :x2 253.1242218017578, :y2 479.984375, :width 608.9999999999999, :height 864.1229947798726} {:x1 304.8515625, :y1 463.984375, :x2 339.00872802734375, :y2 479.984375, :width 608.9999999999999, :height 864.1229947798726}), :page 47}, :content {:text "We can use this functionality as a way to fall back on a default value. If you have a value that might be empty, you can put || after it with a replacement value. If the initial value can be converted to false, you’ll get the replacement instead. The rules for converting strings and numbers to Boolean values state that 0, NaN, and the empty string (\"\") count as false, while all the other values count as true. So 0 || -1 produces -1, and \"\" || \"!?\" yields \"!?\"."}, :properties {:color "yellow"}} {:id #uuid "635c3d9f-efb9-40c4-b186-5ae10fc404eb", :page 47, :position {:bounding {:x1 39.375, :y1 482.3828125, :x2 528.0619506835938, :y2 503.8828125, :width 608.9999999999999, :height 864.1229947798726}, :rects ({:x1 39.375, :y1 482.3828125, :x2 78.74861907958984, :y2 503.8828125, :width 608.9999999999999, :height 864.1229947798726} {:x1 103.296875, :y1 482.3828125, :x2 528.0619506835938, :y2 503.8828125, :width 608.9999999999999, :height 864.1229947798726} {:x1 78.7421875, :y1 486.5390625, :x2 99.1640625, :y2 502.5390625, :width 608.9999999999999, :height 864.1229947798726}), :page 47}, :content {:text "The && operator works similarly but the other way around."}, :properties {:color "yellow"}} {:id #uuid "635c3db0-3e61-44eb-b707-d94c1a3bf7fc", :page 47, :position {:bounding {:x1 0, :y1 285.5, :x2 588.4113159179688, :y2 594.1328125, :width 608.9999999999999, :height 864.1229947798726}, :rects ({:x1 0, :y1 285.5, :x2 0, :y2 306.5, :width 608.9999999999999, :height 864.1229947798726} {:x1 39.375, :y1 550.0703125, :x2 588.4113159179688, :y2 571.5703125, :width 608.9999999999999, :height 864.1229947798726} {:x1 20.5703125, :y1 572.6328125, :x2 411.62628173828125, :y2 594.1328125, :width 608.9999999999999, :height 864.1229947798726}), :page 47}, :content {:text "Another important property of these two operators is that the part to their right is evaluated only when necessary."}, :properties {:color "yellow"}} {:id #uuid "635c3dbd-3bec-4e98-b02f-10c1643d7719", :page 47, :position {:bounding {:x1 0, :y1 349.5, :x2 588.0428466796875, :y2 684.375, :width 608.9999999999999, :height 864.1229947798726}, :rects ({:x1 0, :y1 349.5, :x2 0, :y2 370.5, :width 608.9999999999999, :height 864.1229947798726} {:x1 530.030029296875, :y1 640.3125, :x2 588.0428466796875, :y2 661.8125, :width 608.9999999999999, :height 864.1229947798726} {:x1 20.5703125, :y1 662.875, :x2 263.5703125, :y2 684.375, :width 608.9999999999999, :height 864.1229947798726}), :page 47}, :content {:text "This is called short-circuit evaluation."}, :properties {:color "yellow"}} {:id #uuid "635c3e93-4ffe-4044-812f-d5ed05e97354", :page 51, :position {:bounding {:x1 0, :y1 109.5, :x2 588.062744140625, :y2 359.8671875, :width 608.9999999999999, :height 864.1229947798726}, :rects ({:x1 0, :y1 109.5, :x2 0, :y2 130.5, :width 608.9999999999999, :height 864.1229947798726} {:x1 390.6532897949219, :y1 315.8125, :x2 588.062744140625, :y2 337.3125, :width 608.9999999999999, :height 864.1229947798726} {:x1 20.5703125, :y1 338.3671875, :x2 474.15625, :y2 359.8671875, :width 608.9999999999999, :height 864.1229947798726}), :page 51}, :content {:text "o catch and hold values, JavaScript provides a thing called a binding, or variable:"}, :properties {:color "yellow"}} {:id #uuid "635c3f09-ffd7-463c-8b00-9dee9459e5bc", :page 51, :position {:bounding {:x1 378.9902038574219, :y1 315.8125, :x2 390.6618347167969, :y2 337.3125, :width 608.9999999999999, :height 864.1229947798726}, :rects ({:x1 378.9902038574219, :y1 315.8125, :x2 390.6618347167969, :y2 337.3125, :width 608.9999999999999, :height 864.1229947798726}), :page 51}, :content {:text "T"}, :properties {:color "yellow"}} {:id #uuid "635c3f1f-b740-4cba-8927-24a200c8f328", :page 51, :position {:bounding {:x1 0, :y1 157.5, :x2 588.4335327148438, :y2 518.734375, :width 608.9999999999999, :height 864.1229947798726}, :rects ({:x1 0, :y1 157.5, :x2 0, :y2 178.5, :width 608.9999999999999, :height 864.1229947798726} {:x1 0, :y1 173.5, :x2 0, :y2 194.5, :width 608.9999999999999, :height 864.1229947798726} {:x1 0, :y1 189.5, :x2 0, :y2 210.5, :width 608.9999999999999, :height 864.1229947798726} {:x1 328.8612060546875, :y1 429.5546875, :x2 563.0992431640625, :y2 451.0546875, :width 608.9999999999999, :height 864.1229947798726} {:x1 563.09375, :y1 433.7109375, :x2 588.4335327148438, :y2 449.7109375, :width 608.9999999999999, :height 864.1229947798726} {:x1 20.5703125, :y1 452.1171875, :x2 588.4239501953125, :y2 473.6171875, :width 608.9999999999999, :height 864.1229947798726} {:x1 20.5703125, :y1 474.671875, :x2 588.4092407226562, :y2 496.171875, :width 608.9999999999999, :height 864.1229947798726} {:x1 20.5703125, :y1 497.234375, :x2 124.39141082763672, :y2 518.734375, :width 608.9999999999999, :height 864.1229947798726} {:x1 138.9609375, :y1 497.234375, :x2 362.14263916015625, :y2 518.734375, :width 608.9999999999999, :height 864.1229947798726} {:x1 124.390625, :y1 501.390625, :x2 138.97056579589844, :y2 517.390625, :width 608.9999999999999, :height 864.1229947798726}), :page 51}, :content {:text "The special word (keyword) let indicates that this sentence is going to define a binding. It is followed by the name of the binding and, if we want to immediately give it a value, by an = operator and an expression."}, :properties {:color "yellow"}} {:id #uuid "635c3f68-815c-4fa7-a43b-f5701340ba04", :page 52, :position {:bounding {:x1 0, :y1 13.5, :x2 588.417236328125, :y2 218.1171875, :width 608.9999999999999, :height 864.1229947798726}, :rects ({:x1 0, :y1 13.5, :x2 0, :y2 34.5, :width 608.9999999999999, :height 864.1229947798726} {:x1 0, :y1 29.5, :x2 0, :y2 50.5, :width 608.9999999999999, :height 864.1229947798726} {:x1 175.11587524414062, :y1 151.5, :x2 213.39845275878906, :y2 173, :width 608.9999999999999, :height 864.1229947798726} {:x1 227.8203125, :y1 151.5, :x2 588.417236328125, :y2 173, :width 608.9999999999999, :height 864.1229947798726} {:x1 213.3984375, :y1 155.65625, :x2 227.83441162109375, :y2 171.65625, :width 608.9999999999999, :height 864.1229947798726} {:x1 20.5703125, :y1 174.0546875, :x2 588.4066162109375, :y2 195.5546875, :width 608.9999999999999, :height 864.1229947798726} {:x1 20.5703125, :y1 196.6171875, :x2 177.05458068847656, :y2 218.1171875, :width 608.9999999999999, :height 864.1229947798726}), :page 52}, :content {:text "The = operator can be used at any time on existing bindings to disconnect them from their current value and have them point to a new one."}, :properties {:color "yellow"}} {:id #uuid "635c3f9d-b049-4734-8b82-756c6886ac0f", :page 52, :position {:bounding {:x1 0, :y1 189.5, :x2 587.2213745117188, :y2 475.6875, :width 608.9999999999999, :height 864.1229947798726}, :rects ({:x1 0, :y1 189.5, :x2 0, :y2 210.5, :width 608.9999999999999, :height 864.1229947798726} {:x1 132.1171875, :y1 431.625, :x2 587.2213745117188, :y2 453.125, :width 608.9999999999999, :height 864.1229947798726} {:x1 20.5703125, :y1 454.1875, :x2 133.0757293701172, :y2 475.6875, :width 608.9999999999999, :height 864.1229947798726}), :page 52}, :content {:text "A program can access only the values that it still has a reference to"}, :properties {:color "yellow"}} {:id #uuid "635c3fec-3e84-4347-b169-d38eeed9a981", :page 53, :position {:bounding {:x1 0, :y1 125.5, :x2 588.4036254882812, :y2 393.90625, :width 608.9999999999999, :height 864.1229947798726}, :rects ({:x1 0, :y1 125.5, :x2 0, :y2 146.5, :width 608.9999999999999, :height 864.1229947798726} {:x1 39.375, :y1 349.84375, :x2 132.82989501953125, :y2 371.34375, :width 608.9999999999999, :height 864.1229947798726} {:x1 165.703125, :y1 349.84375, :x2 202.92747497558594, :y2 371.34375, :width 608.9999999999999, :height 864.1229947798726} {:x1 252.6796875, :y1 349.84375, :x2 588.4036254882812, :y2 371.34375, :width 608.9999999999999, :height 864.1229947798726} {:x1 132.8203125, :y1 354, :x2 161.6953125, :y2 370, :width 608.9999999999999, :height 864.1229947798726} {:x1 202.921875, :y1 354, :x2 248.6875, :y2 370, :width 608.9999999999999, :height 864.1229947798726} {:x1 20.5703125, :y1 372.40625, :x2 140.86099243164062, :y2 393.90625, :width 608.9999999999999, :height 864.1229947798726} {:x1 166.1796875, :y1 372.40625, :x2 170.8828125, :y2 393.90625, :width 608.9999999999999, :height 864.1229947798726} {:x1 140.859375, :y1 376.5625, :x2 166.1991729736328, :y2 392.5625, :width 608.9999999999999, :height 864.1229947798726}), :page 53}, :content {:text "The words var and const can also be used to create bindings, in a way similar to let."}, :properties {:color "yellow"}} {:id #uuid "635c402c-7f53-4ab0-9ec0-d1de6a38c1b2", :page 53, :position {:bounding {:x1 0, :y1 221.5, :x2 588.41943359375, :y2 566.8671875, :width 608.9999999999999, :height 864.1229947798726}, :rects ({:x1 0, :y1 221.5, :x2 0, :y2 242.5, :width 608.9999999999999, :height 864.1229947798726} {:x1 39.375, :y1 522.8046875, :x2 117.77578735351562, :y2 544.3046875, :width 608.9999999999999, :height 864.1229947798726} {:x1 147.84375, :y1 522.8046875, :x2 588.41943359375, :y2 544.3046875, :width 608.9999999999999, :height 864.1229947798726} {:x1 117.765625, :y1 526.9609375, :x2 146.640625, :y2 542.9609375, :width 608.9999999999999, :height 864.1229947798726} {:x1 20.5703125, :y1 545.3671875, :x2 206.00396728515625, :y2 566.8671875, :width 608.9999999999999, :height 864.1229947798726}), :page 53}, :content {:text "The first, var (short for “variable”), is the way bindings were declared in pre-2015 JavaScript"}, :properties {:color "yellow"}} {:id #uuid "635c4063-76f3-430f-8015-2d07f7c1048e", :page 53, :position {:bounding {:x1 0, :y1 301.5, :x2 588.4132080078125, :y2 679.671875, :width 608.9999999999999, :height 864.1229947798726}, :rects ({:x1 0, :y1 301.5, :x2 0, :y2 322.5, :width 608.9999999999999, :height 864.1229947798726} {:x1 39.375, :y1 635.609375, :x2 125.4419937133789, :y2 657.109375, :width 608.9999999999999, :height 864.1229947798726} {:x1 175.125, :y1 635.609375, :x2 588.4132080078125, :y2 657.109375, :width 608.9999999999999, :height 864.1229947798726} {:x1 125.4375, :y1 639.765625, :x2 171.1953125, :y2 655.765625, :width 608.9999999999999, :height 864.1229947798726} {:x1 20.5703125, :y1 658.171875, :x2 446.1590881347656, :y2 679.671875, :width 608.9999999999999, :height 864.1229947798726}), :page 53}, :content {:text "The word const stands for constant. It defines a constant binding, which points at the same value for as long as it lives."}, :properties {:color "yellow"}} {:id #uuid "635c4096-a52a-45e3-b64f-3bf1da9c24cf", :page 54, :position {:bounding {:x1 20.5703125, :y1 203.0078125, :x2 568.5771484375, :y2 224.5078125, :width 608.9999999999999, :height 864.1229947798726}, :rects ({:x1 20.5703125, :y1 203.0078125, :x2 568.5771484375, :y2 224.5078125, :width 608.9999999999999, :height 864.1229947798726}), :page 54}, :content {:text "Binding names can be any word. Digits can be part of binding names"}, :properties {:color "yellow"}} {:id #uuid "635c40a5-658b-45be-b18d-ee23369a5489", :page 54, :position {:bounding {:x1 80.75037384033203, :y1 248.125, :x2 415.06275177001953, :y2 269.625, :width 608.9999999999999, :height 864.1229947798726}, :rects ({:x1 80.75037384033203, :y1 248.125, :x2 415.06275177001953, :y2 269.625, :width 608.9999999999999, :height 864.1229947798726}), :page 54}, :content {:text "A binding name may include dollar signs "}, :properties {:color "yellow"}} {:id #uuid "635c40b1-4392-46d1-a3ee-a76109abbda1", :page 54, :position {:bounding {:x1 0, :y1 93.5, :x2 588.41748046875, :y2 337.3125, :width 608.9999999999999, :height 864.1229947798726}, :rects ({:x1 0, :y1 93.5, :x2 0, :y2 114.5, :width 608.9999999999999, :height 864.1229947798726} {:x1 39.375, :y1 293.25, :x2 363.4782409667969, :y2 314.75, :width 608.9999999999999, :height 864.1229947798726} {:x1 388.796875, :y1 293.25, :x2 588.41748046875, :y2 314.75, :width 608.9999999999999, :height 864.1229947798726} {:x1 363.4765625, :y1 297.40625, :x2 388.8163757324219, :y2 313.40625, :width 608.9999999999999, :height 864.1229947798726} {:x1 20.5703125, :y1 315.8125, :x2 307.38092041015625, :y2 337.3125, :width 608.9999999999999, :height 864.1229947798726}), :page 54}, :content {:text "Words with a special meaning, such as let, are keywords, and they may not be used as binding names."}, :properties {:color "yellow"}} {:id #uuid "635c40ee-f950-461f-8182-3586f8f7e9ec", :page 55, :position {:bounding {:x1 0, :y1 13.5, :x2 588.4085083007812, :y2 191.6328125, :width 608.9999999999999, :height 864.1229947798726}, :rects ({:x1 0, :y1 13.5, :x2 0, :y2 34.5, :width 608.9999999999999, :height 864.1229947798726} {:x1 20.5703125, :y1 147.5703125, :x2 588.4085083007812, :y2 169.0703125, :width 608.9999999999999, :height 864.1229947798726} {:x1 20.5703125, :y1 170.1328125, :x2 216.0189208984375, :y2 191.6328125, :width 608.9999999999999, :height 864.1229947798726}), :page 55}, :content {:text "The collection of bindings and their values that exist at a given time is called the environment. "}, :properties {:color "yellow"}} {:id #uuid "635c40fc-efd8-4c61-92f9-43c312066ff4", :page 55, :position {:bounding {:x1 0, :y1 29.5, :x2 588.4306640625, :y2 259.3125, :width 608.9999999999999, :height 864.1229947798726}, :rects ({:x1 0, :y1 29.5, :x2 0, :y2 50.5, :width 608.9999999999999, :height 864.1229947798726} {:x1 0, :y1 45.5, :x2 0, :y2 66.5, :width 608.9999999999999, :height 864.1229947798726} {:x1 0, :y1 61.5, :x2 0, :y2 82.5, :width 608.9999999999999, :height 864.1229947798726} {:x1 216.01011657714844, :y1 170.1328125, :x2 588.0612030029297, :y2 191.6328125, :width 608.9999999999999, :height 864.1229947798726} {:x1 20.5703125, :y1 192.6953125, :x2 588.4072265625, :y2 214.1953125, :width 608.9999999999999, :height 864.1229947798726} {:x1 20.5703125, :y1 215.2578125, :x2 588.4306640625, :y2 236.7578125, :width 608.9999999999999, :height 864.1229947798726} {:x1 20.5703125, :y1 237.8125, :x2 354.88555908203125, :y2 259.3125, :width 608.9999999999999, :height 864.1229947798726}), :page 55}, :content {:text "When a program starts up, this environment is not empty. It always contains bindings that are part of the language standard, and most of the time, it also has bindings that provide ways to interact with the surrounding system."}, :properties {:color "yellow"}} {:id #uuid "635c4118-29b5-4e05-b305-b32cf06d7b24", :page 55, :position {:bounding {:x1 0, :y1 157.5, :x2 588.4204711914062, :y2 445.6015625, :width 608.9999999999999, :height 864.1229947798726}, :rects ({:x1 0, :y1 157.5, :x2 0, :y2 178.5, :width 608.9999999999999, :height 864.1229947798726} {:x1 102.8828125, :y1 401.546875, :x2 588.4204711914062, :y2 423.046875, :width 608.9999999999999, :height 864.1229947798726} {:x1 20.5703125, :y1 424.1015625, :x2 493.4599609375, :y2 445.6015625, :width 608.9999999999999, :height 864.1229947798726}), :page 55}, :content {:text "A function is a piece of program wrapped in a value. Such values can be applied in order to run the wrapped program"}, :properties {:color "yellow"}} {:id #uuid "635c4124-0054-418c-89c0-6674a4e2b0de", :page 56, :position {:bounding {:x1 39.375, :y1 106.375, :x2 546.6754150390625, :y2 127.875, :width 608.9999999999999, :height 864.1229947798726}, :rects ({:x1 39.375, :y1 106.375, :x2 546.6754150390625, :y2 127.875, :width 608.9999999999999, :height 864.1229947798726}), :page 56}, :content {:text "Executing a function is called invoking, calling, or applying it."}, :properties {:color "yellow"}} {:id #uuid "635c412f-a9a8-4bdd-bbab-046f69386bf2", :page 56, :position {:bounding {:x1 0, :y1 -2.5, :x2 588.4088745117188, :y2 173, :width 608.9999999999999, :height 864.1229947798726}, :rects ({:x1 0, :y1 -2.5, :x2 0, :y2 18.5, :width 608.9999999999999, :height 864.1229947798726} {:x1 0, :y1 13.5, :x2 0, :y2 34.5, :width 608.9999999999999, :height 864.1229947798726} {:x1 551.8359375, :y1 106.375, :x2 587.607421875, :y2 127.875, :width 608.9999999999999, :height 864.1229947798726} {:x1 20.5703125, :y1 128.9375, :x2 588.4088745117188, :y2 150.4375, :width 608.9999999999999, :height 864.1229947798726} {:x1 20.5703125, :y1 151.5, :x2 212.31744384765625, :y2 173, :width 608.9999999999999, :height 864.1229947798726}), :page 56}, :content {:text "You can call a function by putting parentheses after an expression that produces a function value."}, :properties {:color "yellow"}} {:id #uuid "635c413c-1c1a-44a5-a872-1d1ff9fb6716", :page 56, :position {:bounding {:x1 72.74408721923828, :y1 241.7421875, :x2 437.25531005859375, :y2 263.2421875, :width 608.9999999999999, :height 864.1229947798726}, :rects ({:x1 72.74408721923828, :y1 241.7421875, :x2 437.25531005859375, :y2 263.2421875, :width 608.9999999999999, :height 864.1229947798726}), :page 56}, :content {:text "alues given to functions are called arguments. "}, :properties {:color "yellow"}} {:id #uuid "635c4158-0c76-46e6-b4ee-66e648394e34", :page 56, :position {:bounding {:x1 0, :y1 189.5, :x2 588.4417114257812, :y2 517.796875, :width 608.9999999999999, :height 864.1229947798726}, :rects ({:x1 0, :y1 189.5, :x2 0, :y2 210.5, :width 608.9999999999999, :height 864.1229947798726} {:x1 0, :y1 205.5, :x2 0, :y2 226.5, :width 608.9999999999999, :height 864.1229947798726} {:x1 0, :y1 221.5, :x2 0, :y2 242.5, :width 608.9999999999999, :height 864.1229947798726} {:x1 455.0348205566406, :y1 428.6171875, :x2 588.4417114257812, :y2 450.1171875, :width 608.9999999999999, :height 864.1229947798726} {:x1 20.5703125, :y1 451.171875, :x2 588.4100341796875, :y2 472.671875, :width 608.9999999999999, :height 864.1229947798726} {:x1 118.828125, :y1 473.734375, :x2 588.403564453125, :y2 495.234375, :width 608.9999999999999, :height 864.1229947798726} {:x1 20.5703125, :y1 477.890625, :x2 118.83978271484375, :y2 493.890625, :width 608.9999999999999, :height 864.1229947798726} {:x1 20.5703125, :y1 496.296875, :x2 75.07430267333984, :y2 517.796875, :width 608.9999999999999, :height 864.1229947798726}), :page 56}, :content {:text "Most JavaScript systems (including all modern web browsers and Node.js) provide a console.log function that writes out its arguments to some text output device"}, :properties {:color "yellow"}} {:id #uuid "635c4164-abb4-417d-b29d-93399aa50fbe", :page 56, :position {:bounding {:x1 85.50643920898438, :y1 496.296875, :x2 540.831787109375, :y2 517.796875, :width 608.9999999999999, :height 864.1229947798726}, :rects ({:x1 85.50643920898438, :y1 496.296875, :x2 540.831787109375, :y2 517.796875, :width 608.9999999999999, :height 864.1229947798726}), :page 56}, :content {:text "In browsers, the output lands in the JavaScript console"}, :properties {:color "yellow"}} {:id #uuid "635c4b73-c165-4deb-b598-f4d0ae8b8001", :page 59, :position {:bounding {:x1 39.375, :y1 191.1015625, :x2 401.2890625, :y2 212.6015625, :width 609.0000000000001, :height 864.1229947798728}, :rects ({:x1 39.375, :y1 191.1015625, :x2 380.864013671875, :y2 212.6015625, :width 609.0000000000001, :height 864.1229947798728} {:x1 380.859375, :y1 195.2578125, :x2 401.2890625, :y2 211.2578125, :width 609.0000000000001, :height 864.1229947798728}), :page 59}, :content {:text "Conditional execution is created with the if "}, :properties {:color "yellow"}} {:id #uuid "635c4bc0-80d3-4b87-acf7-fce14b2d082b", :page 59, :position {:bounding {:x1 0, :y1 285.5, :x2 588.4217529296875, :y2 698.6015625, :width 609.0000000000001, :height 864.1229947798728}, :rects ({:x1 0, :y1 285.5, :x2 0, :y2 306.5, :width 609.0000000000001, :height 864.1229947798728} {:x1 0, :y1 301.5, :x2 0, :y2 322.5, :width 609.0000000000001, :height 864.1229947798728} {:x1 39.375, :y1 631.9765625, :x2 245.7413330078125, :y2 653.4765625, :width 609.0000000000001, :height 864.1229947798728} {:x1 270.7109375, :y1 631.9765625, :x2 457.21490478515625, :y2 653.4765625, :width 609.0000000000001, :height 864.1229947798728} {:x1 473.7578125, :y1 631.9765625, :x2 508.125, :y2 653.4765625, :width 609.0000000000001, :height 864.1229947798728} {:x1 519.9609375, :y1 631.9765625, :x2 588.4217529296875, :y2 653.4765625, :width 609.0000000000001, :height 864.1229947798728} {:x1 245.734375, :y1 636.1328125, :x2 266.15625, :y2 652.1328125, :width 609.0000000000001, :height 864.1229947798728} {:x1 457.21875, :y1 636.1328125, :x2 473.7676696777344, :y2 652.1328125, :width 609.0000000000001, :height 864.1229947798728} {:x1 511.5234375, :y1 636.1328125, :x2 518.296875, :y2 652.1328125, :width 609.0000000000001, :height 864.1229947798728} {:x1 20.5703125, :y1 654.5390625, :x2 588.061767578125, :y2 676.0390625, :width 609.0000000000001, :height 864.1229947798728} {:x1 20.5703125, :y1 677.1015625, :x2 314.7386779785156, :y2 698.6015625, :width 609.0000000000001, :height 864.1229947798728}), :page 59}, :content {:text "The statement after the if is wrapped in braces ({ and }) in this example. The braces can be used to group any number of statements into a single statement, called a block."}, :properties {:color "yellow"}} {:id #uuid "635c4d81-2d84-4677-aaca-de8e44b96905", :page 62, :position {:bounding {:x1 0, :y1 125.5, :x2 588.4107055664062, :y2 466.046875, :width 609.0000000000001, :height 864.1229947798728}, :rects ({:x1 0, :y1 125.5, :x2 0, :y2 146.5, :width 609.0000000000001, :height 864.1229947798728} {:x1 0, :y1 141.5, :x2 0, :y2 162.5, :width 609.0000000000001, :height 864.1229947798728} {:x1 39.375, :y1 399.421875, :x2 588.4107055664062, :y2 420.921875, :width 609.0000000000001, :height 864.1229947798728} {:x1 20.5703125, :y1 421.984375, :x2 588.4053344726562, :y2 443.484375, :width 609.0000000000001, :height 864.1229947798728} {:x1 20.5703125, :y1 444.546875, :x2 63.284603118896484, :y2 466.046875, :width 609.0000000000001, :height 864.1229947798728}), :page 62}, :content {:text "Looping control flow allows us to go back to some point in the program where we were before and repeat it with our current program state."}, :properties {:color "yellow"}} {:id #uuid "635c4da0-67ed-431e-a32b-46252024e8be", :page 64, :position {:bounding {:x1 0, :y1 29.5, :x2 588.4212036132812, :y2 218.1171875, :width 609.0000000000001, :height 864.1229947798728}, :rects ({:x1 0, :y1 29.5, :x2 0, :y2 50.5, :width 609.0000000000001, :height 864.1229947798728} {:x1 0, :y1 45.5, :x2 0, :y2 66.5, :width 609.0000000000001, :height 864.1229947798728} {:x1 39.375, :y1 151.5, :x2 58.39781951904297, :y2 173, :width 609.0000000000001, :height 864.1229947798728} {:x1 80.5, :y1 151.5, :x2 386.5426940917969, :y2 173, :width 609.0000000000001, :height 864.1229947798728} {:x1 433.96875, :y1 151.5, :x2 588.4176025390625, :y2 173, :width 609.0000000000001, :height 864.1229947798728} {:x1 58.390625, :y1 155.65625, :x2 78.8203125, :y2 171.65625, :width 609.0000000000001, :height 864.1229947798728} {:x1 386.5390625, :y1 155.65625, :x2 432.296875, :y2 171.65625, :width 609.0000000000001, :height 864.1229947798728} {:x1 20.5703125, :y1 174.0546875, :x2 153.59078979492188, :y2 195.5546875, :width 609.0000000000001, :height 864.1229947798728} {:x1 177.2265625, :y1 174.0546875, :x2 588.4212036132812, :y2 195.5546875, :width 609.0000000000001, :height 864.1229947798728} {:x1 153.5859375, :y1 178.2109375, :x2 174.015625, :y2 194.2109375, :width 609.0000000000001, :height 864.1229947798728} {:x1 20.5703125, :y1 196.6171875, :x2 561.750732421875, :y2 218.1171875, :width 609.0000000000001, :height 864.1229947798728}), :page 64}, :content {:text "A do loop is a control structure similar to a while loop. It differs only on one point: a do loop always executes its body at least once, and it starts testing whether it should stop only after that first execution."}, :properties {:color "yellow"}} {:id #uuid "635c4e74-38b9-4efe-98e5-3d077dfcaafb", :page 67, :position {:bounding {:x1 0, :y1 29.5, :x2 588.4160766601562, :y2 214.1953125, :width 609.0000000000001, :height 864.1229947798728}, :rects ({:x1 0, :y1 29.5, :x2 0, :y2 50.5, :width 609.0000000000001, :height 864.1229947798728} {:x1 109.15839385986328, :y1 170.1328125, :x2 393.9489440917969, :y2 191.6328125, :width 609.0000000000001, :height 864.1229947798728} {:x1 442.1015625, :y1 170.1328125, :x2 588.4160766601562, :y2 191.6328125, :width 609.0000000000001, :height 864.1229947798728} {:x1 393.9453125, :y1 174.2890625, :x2 439.703125, :y2 190.2890625, :width 609.0000000000001, :height 864.1229947798728} {:x1 20.5703125, :y1 192.6953125, :x2 422.09698486328125, :y2 214.1953125, :width 609.0000000000001, :height 864.1229947798728}), :page 67}, :content {:text "There is a special statement called break that has the effect of immediately jumping out of the enclosing loop."}, :properties {:color "yellow"}} {:id #uuid "635c4e84-3725-4454-8a5e-e696e3c1e7bb", :page 67, :position {:bounding {:x1 -0.005301743745803833, :y1 365.5, :x2 609, :y2 1738, :width 609.0000000000001, :height 864.1229947798728}, :rects ({:x1 0, :y1 365.5, :x2 0, :y2 386.5, :width 609.0000000000001, :height 864.1229947798728} {:x1 0, :y1 384, :x2 609, :y2 384, :width 609.0000000000001, :height 864.1229947798728} {:x1 71.0703125, :y1 672.6672973632812, :x2 608.993408203125, :y2 733.1204223632812, :width 609.0000000000001, :height 864.1229947798728} {:x1 39.371971130371094, :y1 673.0422973632812, :x2 79.04930114746094, :y2 694.5422973632812, :width 609.0000000000001, :height 864.1229947798728} {:x1 154.546875, :y1 673.0422973632812, :x2 336.0025939941406, :y2 694.5422973632812, :width 609.0000000000001, :height 864.1229947798728} {:x1 378.203125, :y1 673.0422973632812, :x2 588.4124145507812, :y2 694.5422973632812, :width 609.0000000000001, :height 864.1229947798728} {:x1 79.0390625, :y1 677.19921875, :x2 150.140625, :y2 693.19921875, :width 609.0000000000001, :height 864.1229947798728} {:x1 336, :y1 677.19921875, :x2 378.23187255859375, :y2 693.19921875, :width 609.0000000000001, :height 864.1229947798728} {:x1 -0.005301743745803833, :y1 733.1304321289062, :x2 608.9916464984417, :y2 864.1069946289062, :width 609.0000000000001, :height 864.1229947798728} {:x1 0, :y1 874, :x2 609, :y2 1738, :width 609.0000000000001, :height 864.1229947798728}), :page 67}, :content {:text "The continue keyword is similar to break, in that it influences the51 progress of a loop"}, :properties {:color "yellow"}} {:id #uuid "635c4fd5-36ef-4941-8c9e-50e31519fb71", :page 71, :position {:bounding {:x1 0, :y1 221.5, :x2 588.406494140625, :y2 540.3515625, :width 609.0000000000001, :height 864.1229947798728}, :rects ({:x1 0, :y1 221.5, :x2 0, :y2 242.5, :width 609.0000000000001, :height 864.1229947798728} {:x1 0, :y1 237.5, :x2 0, :y2 258.5, :width 609.0000000000001, :height 864.1229947798728} {:x1 301.1875, :y1 473.734375, :x2 588.406494140625, :y2 495.234375, :width 609.0000000000001, :height 864.1229947798728} {:x1 20.5703125, :y1 496.296875, :x2 588.0746459960938, :y2 517.796875, :width 609.0000000000001, :height 864.1229947798728} {:x1 20.5703125, :y1 518.8515625, :x2 81.0178451538086, :y2 540.3515625, :width 609.0000000000001, :height 864.1229947798728} {:x1 97.8984375, :y1 518.8515625, :x2 399.0907897949219, :y2 540.3515625, :width 609.0000000000001, :height 864.1229947798728} {:x1 81.015625, :y1 523.0078125, :x2 97.91039276123047, :y2 539.0078125, :width 609.0000000000001, :height 864.1229947798728}), :page 71}, :content {:text "JavaScript has two ways of writing comments. To write a single-line comment, you can use two slash characters (//) and then the comment text after it."}, :properties {:color "yellow"}} {:id #uuid "635c4feb-09e0-44bd-92ad-63c71bbe1221", :page 72, :position {:bounding {:x1 0, :y1 -2.5, :x2 588.4187622070312, :y2 195.5546875, :width 609.0000000000001, :height 864.1229947798728}, :rects ({:x1 0, :y1 -2.5, :x2 0, :y2 18.5, :width 609.0000000000001, :height 864.1229947798728} {:x1 0, :y1 13.5, :x2 0, :y2 34.5, :width 609.0000000000001, :height 864.1229947798728} {:x1 448.6070251464844, :y1 128.9375, :x2 587.2550048828125, :y2 150.4375, :width 609.0000000000001, :height 864.1229947798728} {:x1 20.5703125, :y1 151.5, :x2 90.2265625, :y2 173, :width 609.0000000000001, :height 864.1229947798728} {:x1 114.7265625, :y1 151.5, :x2 149.09375, :y2 173, :width 609.0000000000001, :height 864.1229947798728} {:x1 173.6171875, :y1 151.5, :x2 588.4187622070312, :y2 173, :width 609.0000000000001, :height 864.1229947798728} {:x1 91.6796875, :y1 155.65625, :x2 114.73918914794922, :y2 171.65625, :width 609.0000000000001, :height 864.1229947798728} {:x1 150.5625, :y1 155.65625, :x2 173.6219940185547, :y2 171.65625, :width 609.0000000000001, :height 864.1229947798728} {:x1 20.5703125, :y1 174.0546875, :x2 203.43980407714844, :y2 195.5546875, :width 609.0000000000001, :height 864.1229947798728}), :page 72}, :content {:text "A section of text between /* and */ will be ignored in its entirety, regardless of whether it contains line breaks."}, :properties {:color "yellow"}}]}